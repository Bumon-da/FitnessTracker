<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAV8AAACDCAYAAAAqPhhhAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EgAACxIB0t1+/AAAHHZJREFUeF7tXUvMJNV59SarSN5F8iY7FGUXCYUoKyuxs4kss3BWsWTJUZTYUqQk
        doyymjGJhIUDtuOXMChRsIUNOLElMwvjBwZmBgz2gMEzYwYwrwF+mGGY95PxTEWnRqd9+vS91dV/1z/9
        99/nSGe6+ta93/3u69RXt+rvedfrr7/eDMnXXnut+knqdy/X9b1vec27trY2SuNxV3lP8/SucjxGPaVy
        mu5l/DuPS3bcJtulx1qe9fr3Ur1al9sp5VXb6pPnU7vM4/ZLLPnj/pfoZfi9q15P77JXOq6V92Pvn5IN
        jqXaY3qpHq+zVIeX0bpp2/N72Zq/fq706fnUTsmmf+9bXvNqf/G4q7ynldKH4rs8oUZ35NVXXx19ggcP
        Hqyyz/lXXnll9AkivZTmNj1d07Re2uKx1lGz4/aU6pe3z/1lHveHdty222Jdfk7t0Ja2x/3w+ku+l6i2
        3OZ6qfXTh66x1na5HbXH/FrW+6/UZrdbS2fZkj8lu15WWWqrs2TT09wG7ZLeH35c6h+vw8vosbaj1Kaa
        LT1PP92Wp7lNT9c0rVf7weuo2VFqX4Gqfa6JLuw1VsWXVwlWQIfBl156qXn55Zdb4vjFF19syWN+vvDC
        C+0xPkn/znw8JjWvpvG7n9MyWr+X1/o9j5dH+5iuNvyzdN7903zaZ0r1u28603wsnGybl9f2uj2m6Tn/
        Ttu0qeW8PlL7wX1gHbTvfejpqA/Hv/71ryfye53eBiXKM5/6xzTmY/v0vPuk6V5PKZ/bUD/dlqbpd7Wp
        55nufaPpWp/a9Tq0Lq3H26PpzO9tU3/cNy+raVpXrYzW7+W1fs/j5X39a/tKRH6KPMVYtdRZFF8WVKF9
        6623muPHjzenTp1qzp8/31y8eLF55513miAIglUE9A86ePbs2VYXoY9vvPFGGyFDNxlNu75WxRfCiwIQ
        XBzDcBAEQdAf586daw4fPjyKhl1nJ8SXwgvVPnbsmNsLgiAIZsDbb789ioJ9H3hCfKHUKBAEQRDMD2xH
        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
</value>
  </data>
</root>